{"version":3,"sources":["directives/Header/header.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAgD;AAChD,gEAA4D;AAC5D,gFAA4E;AAC5E,0CAAuC;AACvC;;GAEG;AAcH,IAAa,eAAe;IACxB,yBACY,qBAA6C,EAC7C,aAA6B,EAC7B,MAAe;QAFf,0BAAqB,GAArB,qBAAqB,CAAwB;QAC7C,kBAAa,GAAb,aAAa,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAS;IACzB,CAAC;IAGH,kCAAQ,GAAR;IAEA,CAAC;IAED,gCAAM,GAAN;QAAA,iBAoBC;QAnBG,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC,SAAS,CACzC,UAAA,IAAI;YACA;;eAEG;YACH,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACZ,kGAAkG;gBAClG,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;gBACxC,KAAI,CAAC,aAAa,CAAC,OAAO,GAAG,KAAK,CAAC;gBACnC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,4CAA4C;YAChD,CAAC;YACD,wBAAwB;QAC5B,CAAC,EACD,UAAA,KAAK;YACD,wCAAwC;YACxC,wBAAwB;QAC5B,CAAC,CAAC,CAAC;IACX,CAAC;IACL,sBAAC;AAAD,CAjCA,AAiCC,IAAA;AAjCY,eAAe;IAZ3B,gBAAS,CAAC;QACP,uBAAuB;QACvB,QAAQ,EAAE,WAAW;QACrB,MAAM,EAAE,CAAC,mFAKR,CAAC;QACF,WAAW,EAAE,yBAAyB;KACzC,CAAC;qCAIsC,8CAAqB;QAC7B,8BAAa;QACpB,eAAM;GAJlB,eAAe,CAiC3B;AAjCY,0CAAe","file":"header.component.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\r\nimport {GlobalService} from \"../../services/global.service\";\r\nimport {AuthenticationService} from \"../../services/authentication.service\";\r\nimport {Router} from \"@angular/router\";\r\n/**\r\n * Created by ori on 4/30/2017.\r\n */\r\n\r\n@Component({\r\n    // moduleId: module.id,\r\n    selector: 'my-header',\r\n    styles: [`\r\n        :host {\r\n          display:block;\r\n          height:0;\r\n        }\r\n    `],\r\n    templateUrl: './header.component.html'\r\n})\r\n\r\nexport class HeaderComponent implements OnInit{\r\n    constructor(\r\n        private authenticationService : AuthenticationService,\r\n        private globalService : GlobalService,\r\n        private router : Router\r\n    ){}\r\n\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    logout(): void {\r\n        this.authenticationService.logout().subscribe(\r\n            data => {\r\n                /**\r\n                 * @param {{err:number,errMessage:string}} data\r\n                 */\r\n                if (!data.err) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    localStorage.removeItem('currentStore');\r\n                    this.globalService.isLogin = false;\r\n                    this.router.navigate(['/login']);\r\n                } else {\r\n                    // this.alertService.error(data.errMessage);\r\n                }\r\n                // this.loading = false;\r\n            },\r\n            error => {\r\n                // this.alertService.error(error._body);\r\n                // this.loading = false;\r\n            });\r\n    }\r\n}\r\n"]}